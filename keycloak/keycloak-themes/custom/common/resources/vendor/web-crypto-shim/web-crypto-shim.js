function t(t,...e){if(!((n=t)instanceof Uint8Array||null!=n&&"object"==typeof n&&"Uint8Array"===n.constructor.name))throw new Error("Uint8Array expected");var n;if(e.length>0&&!e.includes(t.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${t.length}`)}function e(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const n=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),r=(t,e)=>t<<32-e|t>>>e;function s(e){return"string"==typeof e&&(e=function(t){if("string"!=typeof t)throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array((new TextEncoder).encode(t))}(e)),t(e),e}new Uint8Array(new Uint32Array([287454020]).buffer)[0];class o{clone(){return this._cloneInto()}}function i(t){const e=e=>t().update(s(e)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}const h=(t,e,n)=>t&e^t&n^e&n;class u extends o{constructor(t,e,r,s){super(),this.blockLen=t,this.outputLen=e,this.padOffset=r,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=n(this.buffer)}update(t){e(this);const{view:r,buffer:o,blockLen:i}=this,h=(t=s(t)).length;for(let e=0;e<h;){const s=Math.min(i-this.pos,h-e);if(s!==i)o.set(t.subarray(e,e+s),this.pos),this.pos+=s,e+=s,this.pos===i&&(this.process(r,0),this.pos=0);else{const r=n(t);for(;i<=h-e;e+=i)this.process(r,e)}}return this.length+=t.length,this.roundClean(),this}digestInto(r){e(this),function(e,n){t(e);const r=n.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}(r,this),this.finished=!0;const{buffer:s,view:o,blockLen:i,isLE:h}=this;let{pos:u}=this;s[u++]=128,this.buffer.subarray(u).fill(0),this.padOffset>i-u&&(this.process(o,0),u=0);for(let t=u;t<i;t++)s[t]=0;!function(t,e,n,r){if("function"==typeof t.setBigUint64)return t.setBigUint64(e,n,r);const s=BigInt(32),o=BigInt(4294967295),i=Number(n>>s&o),h=Number(n&o),u=r?4:0,c=r?0:4;t.setUint32(e+u,i,r),t.setUint32(e+c,h,r)}(o,i-8,BigInt(8*this.length),h),this.process(o,0);const c=n(r),f=this.outputLen;if(f%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const a=f/4,d=this.get();if(a>d.length)throw new Error("_sha2: outputLen bigger than state");for(let t=0;t<a;t++)c.setUint32(4*t,d[t],h)}digest(){const{buffer:t,outputLen:e}=this;this.digestInto(t);const n=t.slice(0,e);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:e,buffer:n,length:r,finished:s,destroyed:o,pos:i}=this;return t.length=r,t.pos=i,t.finished=s,t.destroyed=o,r%e&&t.buffer.set(n),t}}const c=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),f=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),a=new Uint32Array(64);class d extends u{constructor(){super(64,32,8,!1),this.A=0|f[0],this.B=0|f[1],this.C=0|f[2],this.D=0|f[3],this.E=0|f[4],this.F=0|f[5],this.G=0|f[6],this.H=0|f[7]}get(){const{A:t,B:e,C:n,D:r,E:s,F:o,G:i,H:h}=this;return[t,e,n,r,s,o,i,h]}set(t,e,n,r,s,o,i,h){this.A=0|t,this.B=0|e,this.C=0|n,this.D=0|r,this.E=0|s,this.F=0|o,this.G=0|i,this.H=0|h}process(t,e){for(let n=0;n<16;n++,e+=4)a[n]=t.getUint32(e,!1);for(let t=16;t<64;t++){const e=a[t-15],n=a[t-2],s=r(e,7)^r(e,18)^e>>>3,o=r(n,17)^r(n,19)^n>>>10;a[t]=o+a[t-7]+s+a[t-16]|0}let{A:n,B:s,C:o,D:i,E:u,F:f,G:d,H:l}=this;for(let t=0;t<64;t++){const e=l+(r(u,6)^r(u,11)^r(u,25))+((p=u)&f^~p&d)+c[t]+a[t]|0,y=(r(n,2)^r(n,13)^r(n,22))+h(n,s,o)|0;l=d,d=f,f=u,u=i+e|0,i=o,o=s,s=n,n=e+y|0}var p;n=n+this.A|0,s=s+this.B|0,o=o+this.C|0,i=i+this.D|0,u=u+this.E|0,f=f+this.F|0,d=d+this.G|0,l=l+this.H|0,this.set(n,s,o,i,u,f,d,l)}roundClean(){a.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const l=i((()=>new d));for(var p,y=[],g=0;g<256;++g)y.push((g+256).toString(16).slice(1));var b=new Uint8Array(16);function w(){if(!p&&!(p="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return p(b)}var U={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function m(t,e,n){if(U.randomUUID&&!e&&!t)return U.randomUUID();var r=(t=t||{}).random||(t.rng||w)();return r[6]=15&r[6]|64,r[8]=63&r[8]|128,function(t,e=0){return(y[t[e+0]]+y[t[e+1]]+y[t[e+2]]+y[t[e+3]]+"-"+y[t[e+4]]+y[t[e+5]]+"-"+y[t[e+6]]+y[t[e+7]]+"-"+y[t[e+8]]+y[t[e+9]]+"-"+y[t[e+10]]+y[t[e+11]]+y[t[e+12]]+y[t[e+13]]+y[t[e+14]]+y[t[e+15]]).toLowerCase()}(r)}"undefined"==typeof crypto&&(globalThis.crypto={}),void 0===crypto.subtle&&Object.defineProperty(crypto,"subtle",{value:{digest:async(t,e)=>{if("SHA-256"===t)return l(e);throw new Error("Unsupported algorithm")}}}),void 0===crypto.getRandomValues&&Object.defineProperty(crypto,"getRandomValues",{value:t=>{for(let e=0;e<t.length;e++)t[e]=Math.floor(256*Math.random());return t}}),void 0===crypto.randomUUID&&Object.defineProperty(crypto,"randomUUID",{value:()=>m()});
